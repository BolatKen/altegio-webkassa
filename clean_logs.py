#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤"""

import sys

def view_clean_logs(filename="logs/errors.log", lines=20, search=""):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            all_lines = f.readlines()
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –ø–æ–∏—Å–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if search:
            filtered_lines = [line for line in all_lines if search.lower() in line.lower()]
            lines_to_show = filtered_lines[-lines:] if len(filtered_lines) > lines else filtered_lines
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(filtered_lines)} —Å—Ç—Ä–æ–∫ —Å '{search}', –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ {len(lines_to_show)}:")
        else:
            lines_to_show = all_lines[-lines:] if len(all_lines) > lines else all_lines
            print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(lines_to_show)} —Å—Ç—Ä–æ–∫ –∏–∑ {filename}:")
        
        print("=" * 80)
        
        for i, line in enumerate(lines_to_show, 1):
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∏—Å—Ç–æ
            clean_line = line.strip()
            if clean_line:
                print(f"{i:3d}: {clean_line}")
                
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    if len(sys.argv) == 1:
        view_clean_logs()
    elif len(sys.argv) == 2:
        try:
            lines_count = int(sys.argv[1])
            view_clean_logs(lines=lines_count)
        except ValueError:
            view_clean_logs(search=sys.argv[1])
    elif len(sys.argv) == 3:
        try:
            lines_count = int(sys.argv[1])
            view_clean_logs(lines=lines_count, search=sys.argv[2])
        except ValueError:
            view_clean_logs(search=sys.argv[1])
