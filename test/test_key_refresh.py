#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–µ–π –¥–ª—è Webkassa
"""

import requests
import json
from datetime import datetime

def test_api_key_refresh():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞
    """
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–µ–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π –∫–ª—é—á –≤ –±–∞–∑–µ
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ API –∫–ª—é—á–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        import subprocess
        result = subprocess.run([
            "docker", "exec", "altegio_webkassa_db", "psql", "-U", "postgres", 
            "-d", "altegio_webkassa_db", "-c", 
            "SELECT LEFT(api_key, 20) as key_start, RIGHT(api_key, 20) as key_end, updated_at FROM api_keys WHERE service_name='Webkassa';"
        ], capture_output=True, text=True, timeout=10)
        
        print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç: {result.stdout}")
        if result.stderr:
            print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print("\n" + "="*60 + "\n")
    
    # –ó–∞–ø—É—Å—Ç–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞
    print("2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞...")
    
    try:
        result = subprocess.run([
            "docker", "exec", "altegio_webkassa_backend", 
            "python", "scripts/update_webkassa_key.py"
        ], capture_output=True, text=True, timeout=30)
        
        print(f"üìä –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result.returncode}")
        print(f"üìù –í—ã–≤–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞:")
        print(result.stdout)
        
        if result.stderr:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∏:")
            print(result.stderr)
            
        if result.returncode == 0:
            print("‚úÖ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {result.returncode}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")
    
    print("\n" + "="*60 + "\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–ª—é—á –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    
    try:
        result = subprocess.run([
            "docker", "exec", "altegio_webkassa_db", "psql", "-U", "postgres", 
            "-d", "altegio_webkassa_db", "-c", 
            "SELECT LEFT(api_key, 20) as key_start, RIGHT(api_key, 20) as key_end, updated_at FROM api_keys WHERE service_name='Webkassa';"
        ], capture_output=True, text=True, timeout=10)
        
        print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç: {result.stdout}")
        if result.stderr:
            print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞–º–∏ Webkassa")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 70)
    
    test_api_key_refresh()
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ï—Å–ª–∏ –∫–ª—é—á –æ–±–Ω–æ–≤–∏–ª—Å—è, —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("   - –ï—Å–ª–∏ –æ—à–∏–±–∫–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è WEBKASSA_*")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å Webkassa –∞–∫—Ç—É–∞–ª—å–Ω—ã")
