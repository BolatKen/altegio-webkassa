#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ Webkassa
# –§–∞–π–ª: scripts/check-status.sh

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Webkassa API"
echo "=================================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    local status=$1
    local message=$2
    
    if [ "$status" = "OK" ]; then
        echo -e "${GREEN}‚úÖ $message${NC}"
    elif [ "$status" = "WARNING" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  $message${NC}"
    else
        echo -e "${RED}‚ùå $message${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º systemd timer
echo -e "\n${BLUE}üîπ Systemd Timer Status${NC}"
echo "------------------------"

if systemctl is-active --quiet webkassa-key-update.timer; then
    print_status "OK" "Timer –∞–∫—Ç–∏–≤–µ–Ω"
else
    print_status "ERROR" "Timer –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
fi

if systemctl is-enabled --quiet webkassa-key-update.timer; then
    print_status "OK" "Timer –≤–∫–ª—é—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
else
    print_status "ERROR" "Timer –Ω–µ –≤–∫–ª—é—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫
echo -e "\n${BLUE}üîπ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞${NC}"
echo "---------------------"
systemctl list-timers webkassa-key-update.timer --no-pager | tail -n +2

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo -e "\n${BLUE}üîπ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è${NC}"
echo "------------------------"
if journalctl -u webkassa-key-update.service --since "7 days ago" --no-pager | grep -q "Starting"; then
    print_status "OK" "–ï—Å—Ç—å –∑–∞–ø–∏—Å–∏ –æ –∑–∞–ø—É—Å–∫–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏:"
    journalctl -u webkassa-key-update.service --since "7 days ago" --no-pager | grep "Starting\|completed\|failed" | tail -5
else
    print_status "WARNING" "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –∑–∞–ø—É—Å–∫–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
echo -e "\n${BLUE}üîπ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç${NC}"
echo "-----------------------"
last_log=$(journalctl -u webkassa-key-update.service -n 20 --no-pager | grep -E "(completed successfully|failed|ERROR)" | tail -1)
if echo "$last_log" | grep -q "completed successfully"; then
    print_status "OK" "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
elif echo "$last_log" | grep -q "failed\|ERROR"; then
    print_status "ERROR" "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π"
    echo "–û—à–∏–±–∫–∞: $last_log"
else
    print_status "WARNING" "–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker –ø—Ä–æ–µ–∫—Ç
echo -e "\n${BLUE}üîπ Docker Project Status${NC}"
echo "-------------------------"
PROJECT_DIR="/opt/altegio-webkassa-integration"
if [ -f "$PROJECT_DIR/docker-compose.yml" ]; then
    cd "$PROJECT_DIR"
    if docker-compose ps | grep -q "Up"; then
        print_status "OK" "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
    else
        print_status "ERROR" "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
    fi
else
    print_status "ERROR" "–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $PROJECT_DIR"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${BLUE}üîπ Database API Key Status${NC}"
echo "---------------------------"
if [ -f "$PROJECT_DIR/docker-compose.yml" ]; then
    cd "$PROJECT_DIR"
    if docker-compose ps | grep -q "db.*Up"; then
        api_key_info=$(docker-compose exec -T db psql -U postgres -d altegio_webkassa_db -t -c "SELECT service_name, updated_at FROM api_keys WHERE service_name = 'Webkassa';" 2>/dev/null || echo "ERROR")
        
        if [ "$api_key_info" != "ERROR" ] && [ -n "$api_key_info" ]; then
            print_status "OK" "API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
            echo "–î–µ—Ç–∞–ª–∏: $api_key_info"
        else
            print_status "WARNING" "API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        fi
    else
        print_status "ERROR" "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Å–∏—Å—Ç–µ–º—ã
echo -e "\n${BLUE}üîπ System Files Status${NC}"
echo "-----------------------"

files_to_check=(
    "/usr/local/bin/update-webkassa-key.sh"
    "/etc/systemd/system/webkassa-key-update.service"
    "/etc/systemd/system/webkassa-key-update.timer"
    "/var/log/webkassa-key-update.log"
)

for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        print_status "OK" "–ù–∞–π–¥–µ–Ω: $file"
    else
        print_status "ERROR" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $file"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "\n${BLUE}üîπ Environment Variables${NC}"
echo "-------------------------"
if [ -f "$PROJECT_DIR/.env" ]; then
    if grep -q "WEBKASSA_LOGIN" "$PROJECT_DIR/.env"; then
        print_status "OK" "WEBKASSA_LOGIN –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        print_status "ERROR" "WEBKASSA_LOGIN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
    
    if grep -q "WEBKASSA_PASSWORD" "$PROJECT_DIR/.env"; then
        print_status "OK" "WEBKASSA_PASSWORD –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        print_status "ERROR" "WEBKASSA_PASSWORD –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
    
    if grep -q "WEBKASSA_AUTH_URL" "$PROJECT_DIR/.env"; then
        print_status "OK" "WEBKASSA_AUTH_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        print_status "WARNING" "WEBKASSA_AUTH_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    fi
else
    print_status "ERROR" ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo -e "\n${BLUE}üìä –°–≤–æ–¥–∫–∞${NC}"
echo "=========="

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (—Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º)
echo -e "\n${YELLOW}üí° –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
echo "sudo systemctl start webkassa-key-update.service"
echo ""
echo -e "${YELLOW}üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:${NC}"
echo "sudo journalctl -u webkassa-key-update.service -f"
echo ""
echo -e "${YELLOW}üí° –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:${NC}"
echo "sudo systemctl stop webkassa-key-update.timer"
echo "sudo systemctl disable webkassa-key-update.timer"
